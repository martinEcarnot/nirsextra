matX
ginv(matX)
solve(crossprod(matX))
load("~/Documents/INRA/Projets/FusEye/asd_sanitaire_CHS")
# Classes : 1=Fusa, 2=microdochium, 3=Fusa+micro, 4=sain
# dat=droplevels(dat[dat$Classe %in% c("1","2","3","4"),])
dat=droplevels(dat[dat$Classe %in% c("1","2"),])
# levels(dat$Classe)[2:3]="1"
nclas=nlevels(dat$Classe)
p=rbind(list('snv',''),list('sder',c(1,3,9)),list('red',c(1,10,1)))
p=rbind(list('snv',''))
# p=rbind(list('adj',''),list('red',c(50,40,1)),list('snv',''),list('sder',c(1,3,65)),list('del',c(150,250)))
dat$xp=pre(dat$x,p)
splevels=data.frame(lieu=dat$Lieu,date=as.numeric(dat$date),espece=as.numeric(dat$Espèce),variete=as.numeric(dat$nom),champi=as.numeric(dat$Classe))
fact=apply(as.matrix(splevels), FUN=as.numeric,MARGIN=2) #cbind(splevels$date,splevels$date,splevels$variete,splevels$champi)
nom_fac=colnames(fact)
opt=asca('options')
source('~/Documents/INRA/R/nirsextra/R/asca.R')
opt=asca('options')
r=asca(datr$x,factr,opt)
datr=dat[seq(1,900,10),]
factr=fact[seq(1,900,10),]
r=asca(datr$x,factr,opt)
library(MetStaT)
?ASCA.Calculate
ASCA <- ASCA.Calculate(datr$x,factr)
r$XA$EffectExplVar
r$XB$EffectExplVar
r$XC$EffectExplVar
r$XD$EffectExplVar
r$XE$EffectExplVar
r$SignificantTerms
unlist(r$SignificantTerms)
opt$nperm
opt$nperm=500
r=asca(dat$x,fact,opt)
devtools::load_all(".")
library(nirsextra)
library(MetStaT)
load("~/Documents/INRA/Projets/FusEye/asd_sanitaire_CHS")
dat=droplevels(dat[dat$Classe %in% c("1","2"),])
splevels=data.frame(lieu=dat$Lieu,date=as.numeric(dat$date),espece=as.numeric(dat$Espèce),variete=as.numeric(dat$nom),champi=as.numeric(dat$Classe))
fact=apply(as.matrix(splevels), FUN=as.numeric,MARGIN=2)
nom_fac=colnames(fact)
datr=dat[seq(1,900,10),]
factr=fact[seq(1,900,10),1:5]
library(nirsextra)
library(MetStaT)
load("~/Documents/INRA/Projets/FusEye/asd_sanitaire_CHS")
dat=droplevels(dat[dat$Classe %in% c("1","2"),])
splevels=data.frame(lieu=dat$Lieu,date=as.numeric(dat$date),espece=as.numeric(dat$Espèce),variete=as.numeric(dat$nom),champi=as.numeric(dat$Classe))
fact=apply(as.matrix(splevels), FUN=as.numeric,MARGIN=2)
nom_fac=colnames(fact)
datr=dat[seq(1,900,10),]
factr=fact[seq(1,900,10),1:5]
opt=asca('options')
opt$nperm=500
r=asca(dat$x,fact,opt)
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
r$SignificantTerms
str(fact)
head(fact)
factr=fact[seq(1,900,10),-4]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
r$SignificantTerms
r$EffectExplVar
str(r$Xa)
str(r$XA)
?lapply
lapply(r,fun=function(x) x=x$EffectExplVar)
lapply(r,FUN <- function(variables) {
}=function(x) x=x$EffectExplVar)
lapply(r,FUN=function(x) x=x$EffectExplVar)
apply(r,FUN=function(x) x=x$EffectExplVar)
sapply(r,FUN=function(x) x=x$EffectExplVar)
unlist(r)
str(unlist(r))
lapply(r, "$", , +)
lapply(r, "$", ,EffectExplVar)
apply(r, "$", ,EffectExplVar)
str(r)
library(tidyverse)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
ev
r$XA$EffectSignif
r$XA$EffectSignif$p
r$XB$EffectSignif$p
r$XC$EffectSignif$p
r$XD$EffectSignif$p
factr=fact[seq(1,900,10),-4]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
ev
p
factr=fact[seq(1,900,10),-5]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
ev
p
r$SignificantTerms
unlist(r$SignificantTerms)
factr=fact[seq(1,900,10),-4]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
unlist(r$SignificantTerms)
names(factr)
row.names(factr)
factr
col.names(factr)
colnames(factr)
factr=fact[seq(1,900,10),-4]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
colnames(factr)
unlist(r$SignificantTerms)
factr=fact[seq(1,900,10),-4]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
print(colnames(factr))
print(ev)
print(p)
unlist(r$SignificantTerms)
factr=fact[seq(1,900,10),-5]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
print(colnames(factr))
print(ev)
print(p)
unlist(r$SignificantTerms)
ASCA <- ASCA.Calculate(datr$x,factr)
?ASCA.Calculate
r$XRes$EffectExplVar
ASCA.Plot(ASCA)
ASCA <- ASCA.Calculate(datr$x,factr, equation.elements = "1,2,3,4")
library(nirsextra)
library(MetStaT)
load("~/Documents/INRA/Projets/FusEye/asd_sanitaire_CHS")
dat=droplevels(dat[dat$Classe %in% c("1","2"),])
splevels=data.frame(lieu=dat$Lieu,date=as.numeric(dat$date),espece=as.numeric(dat$Espèce),variete=as.numeric(dat$nom),champi=as.numeric(dat$Classe))
fact=apply(as.matrix(splevels), FUN=as.numeric,MARGIN=2)
nom_fac=colnames(fact)
datr=dat[seq(1,900,10),]
factr=fact[seq(1,900,10),-5]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
print(colnames(factr))
print(ev)
print(p)
unlist(r$SignificantTerms)
ASCA <- ASCA.Calculate(datr$x,factr, equation.elements = "1,2,3,4")
?ASCA.DoPermutationTest
ASCA.DoPermutationTest(ASCA, perm=500)
ASCA <- ASCA.Calculate(datr$x,factr, equation.elements = "1,2,3,4,5")
ASCA <- ASCA.Calculate(datr$x,factr, equation.elements = "1,2,3")
factr=fact[seq(1,900,10),-c(4:5)]
opt=asca('options')
opt$nperm=500
r=asca(datr$x,factr,opt)
r=asca(datr$x,factr,opt)
ev=c(r$XA$EffectExplVar,r$XB$EffectExplVar,r$XC$EffectExplVar,r$XD$EffectExplVar)
p=c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p)
print(colnames(factr))
print(ev)
print(ev)
print(p)
unlist(r$SignificantTerms)
opt$nperm=500
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
opt$nperm=500
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
opt$nperm=500
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
opt$nperm=500
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
opt$nperm=1000
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
opt$nperm=1000
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
opt$nperm=1000
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
ASCA.DoPermutationTest(ASCA, perm=500)
nperm=1000
opt$nperm=nperm
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
ASCA.DoPermutationTest(ASCA, perm=500)
nperm=10000
opt$nperm=nperm
r=asca(datr$x,factr,opt)
print(c(r$XA$EffectSignif$p,r$XB$EffectSignif$p,r$XC$EffectSignif$p,r$XD$EffectSignif$p))
ASCA.DoPermutationTest(ASCA, perm=500)
ASCA.DoPermutationTest(ASCA, perm=nperm)
ASCA.DoPermutationTest
ASCA.DoPermutationTest(ASCA, perm=500)
ASCA.DoPermutationTest(ASCA, perm=5000)
library(rnirs)
?pca
?pls
?plsr
library(ggplot2)
load("~/Documents/INRA/Projets/FusEye/asd_sanitaire")
# Classes : 1=Fusa, 2=microdochium, 3=Fusa+micro, 4=sain
# dat=droplevels(dat[dat$Classe %in% c("1","2","3","4"),])
dat=droplevels(dat[dat$Classe %in% c("1","2"),])
# levels(dat$Classe)[2:3]="1"
nclas=nlevels(dat$Classe)
Xr=dat$x
ncomp <- 3
fm <- pca(Xr, ncomp = ncomp)
names(fm)
plotsp(fm$P)
str(fm$P)
str(t(fm$P))
plotsp(t(fm$P))
ncomp <- 3
fm <- pca(Xr, ncomp = ncomp)
names(fm)
ncomp=ncomp <- 3
fm <- pca(Xr, ncomp = ncomp)
names(fm)
ncomp=10
fm <- pca(Xr, ncomp =ncomp)
plotsp(t(fm$P))
load("~/Documents/INRA/Projets/FusEye/asd_sanitaire")
str(dat)
class(dat)
library(rnirs)
plotsp(dat$x)
library(nirsextra)
devtools::load_all(".")
setwd("/home/ecarnot/Documents/INRA/R/formation_package2021/")
brocolors()
library(brocolors)
plot_crayons()
install.packages(devtools)
library(devtools)
setwd("/home/ecarnot/Documents/INRA/R/formation_package2021/brocolors/")
build()
install.packages("remotes")
remotes::install_github("mlesnoff/rnirs", dependencies = TRUE, build_vignettes = F)
library(rnirs)
?plse
?plsr
library(rnirs)
?plsr
bcoef
data(datforages)
Xr <- datforages$Xr
yr <- datforages$yr
Xu <- datforages$Xu
yu <- datforages$yu
Xr <- detrend(Xr)
Xu <- detrend(Xu)
ncomp <- 20
fm <- plsda(Xr, yr, Xu, yu, ncomp = ncomp)
str(fm)
bcoef
b=bcoef(fm)
b
str(b)
ncomp
?bcoef()
b=bcoef(fm, ncomp = 10)
str(b)
fm$C
bcoef()
bcoef
seq_len(10)
t(fm$C)[seq_len(10), , drop = FALSE]
str(yr)
headm(Xr)
fm <- plsdalm(Xr, yr, Xu, yu, ncomp = ncomp)
ncomp
b=bcoef(fm, ncomp = ncomp)
str(b)
bcoef
dim(fm$R)[2]
beta <- t(fm$C)[seq_len(ncomp), , drop = FALSE]
beta
b <- fm$R[, seq_len(ncomp), drop = FALSE] %*% beta
str(b)
library(nirsextra)
source('~/Documents/INRA/R/nirsextra/R/asca.R')
source('~/Documents/INRA/melanges/discri_grains_2018/prep_data.R')
datm=prep_data()
setwd("/home/ecarnot/Documents/INRA/melanges/discri_grains_2018/")
datm=prep_data()
str(datm)
segm <- segmkf(n = nrow(datm), K = 5, typ = "random", nrep = 10)      # = Repeated K-fold CV
fm <- cvfit(datm$x, datm$culture, fun = plsdalm,  ncomp = 20,  segm = segm,  printcv = F)
library(rnirs)
segm <- segmkf(n = nrow(datm), K = 5, typ = "random", nrep = 10)      # = Repeated K-fold CV
fm <- cvfit(datm$x, datm$culture, fun = plsdalm,  ncomp = 20,  segm = segm,  printcv = F)
str(onefitcv(fm,5,1))
str(onefitcv(fm,5,1:2))
segm <- segmkf(n = nrow(datm), K = 5, typ = "random", nrep = 1)      # = Repeated K-fold CV
fm <- cvfit(datm$x, datm$culture, fun = plsdalm,  ncomp = 20,  segm = segm,  printcv = F)
str(onefitcv(fm,5,1:2))
str(fm)
max(fm$y$rep)
source('~/Documents/INRA/R/nirsextra/R/onefitcv.R')
fm1=onefitcv(fm,10)
obs=fm1$y$y1
pred=fm1$fit$y
obs=as.factor(obs)
pred=as.factor(pred)
str(obs)
str(pred)
nlev=nlevels(as.factor(obs))
cat("\nGlobal\n")
t=table(Classes_Obs=obs,Classes_pred=pred)
disp=cbind(t,make_pbc(t,nlev))
make_pbc= function(tabl,nlev) {
pbc=100*sum(diag(tabl))/sum(tabl)
t=array(c(c(sprintf("  %.1f%%  ",pbc),rep("",nlev-1)),rep("",nlev)),dim = c(nlev,nlev))
return(t)
}
disp=cbind(t,make_pbc(t,nlev))
rownames(disp)=c("Classes_Obs",rep("",nlev-1))
colnames(disp)=c("Classes_pred","","","")
print(disp,quote=F)
length(obs)
str(fm1)
source('~/Documents/INRA/R/nirsextra/R/onefitcv.R')
library(nirsextra)
fm1=onefitcv(fm,10)
str(fm1)
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==ncomp & x$rep %in% rep,]})
rep=1:max(fm$y$rep)
rep
segm <- segmkf(n = nrow(datm), K = 5, typ = "random", nrep = 6)      # = Repeated K-fold CV
fm <- cvfit(datm$x, datm$culture, fun = plsdalm,  ncomp = 20,  segm = segm,  printcv = F)
fm1=onefitcv(fm,10)
str(fm1)
fm1=onefitcv(fm,10,1)
str(fm1)
fm1=onefitcv(fm,10)
obs=fm1$y$y1
pred=fm1$fit$y
make_pbc= function(tabl,nlev) {
pbc=100*sum(diag(tabl))/sum(tabl)
t=array(c(c(sprintf("  %.1f%%  ",pbc),rep("",nlev-1)),rep("",nlev)),dim = c(nlev,nlev))
return(t)
}
obs=as.factor(obs)
pred=as.factor(pred)
nlev=nlevels(as.factor(obs))
cat("\nGlobal\n")
t=table(Classes_Obs=obs,Classes_pred=pred)
disp=cbind(t,make_pbc(t,nlev))
rownames(disp)=c("Classes_Obs",rep("",nlev-1))
colnames(disp)=c("Classes_pred","","","")
print(disp,quote=F)
fac=datm[,4:5]
str(fac)
nfac=ncol(fac)
nfac
i=1
fac1=pull(fac,i)
fac1
?pluu
?pull
disp=matrix(nrow=nlev,ncol=0)
cname=character()
nlevels(fac1)
j=1
lev1=fac1==levels(fac1)[j]
t=table(Classes_Obs=obs[lev1],Classes_pred=pred[lev1])
disp=cbind(disp,t,make_pbc(t,nlev))
cname=c(cname,"Pred","",levels(fac1)[j],"")  # c(cname,"Classes_pred","",levels(fac1)[j],"")
disp
nfac=ncol(fac)
for (i in 1:nfac) {
fac1=pull(fac,i)
disp=matrix(nrow=nlev,ncol=0)
cname=character()
for (j in 1:nlevels(fac1)){
lev1=fac1==levels(fac1)[j]
t=table(Classes_Obs=obs[lev1],Classes_pred=pred[lev1])
disp=cbind(disp,t,make_pbc(t,nlev))
cname=c(cname,"Pred","",levels(fac1)[j],"")  # c(cname,"Classes_pred","",levels(fac1)[j],"")
}
# browser()
rownames(disp)=c("Obs",rep("",nlev-1))  # c("Classes_Obs",rep("",nlev-1))
colnames(disp)=cname #rep(c("Classes_pred","","",""),nlevels(fac1))
cat("\n\nFacteur: ",colnames(fac)[i]," \n\n")
print(disp,quote=F)
}
table_fac_rnirs(fm,datm,4,5)
fm1=(fm,5)
fm1=onefitcv(fm,5)
table_fac(fm1$y$y1,fm1$fit$y1,datm[as.numeric(fm1$y$rownam),numfac])
as.numeric(fm1$y$rownam)
str(fm)
rownames(datm)[1:10]
rownames(datm$x)[1:10]
datm=prep_data()
rownames(datm)[1:10]
rownames(datm)=rownames(datm$x)
source('~/Documents/INRA/melanges/discri_grains_2018/prep_data.R')
datm=prep_data()
str(datm)
rownames(datm)[1:10]
str(fm)
str(rownames(dat$x) %in% fm1$y$rownam)
str(rownames(datm$x) %in% fm1$y$rownam)
str(fm1$y$rownam %in% rownames(datm$x))
str(fm1)
rownames(datm$x)[(fm1$y$rownam %in% rownames(datm$x)]
rownames(datm$x)[fm1$y$rownam %in% rownames(datm$x)]
rownames(datm$x)[fm1$y$rownam %in% rownames(datm$x)][1:50]
fm1$y$rownam[1:50]
str(fm1)
str(fm1$y$rownam %in% rownames(datm$x))
which(fm1$y$rownam %in% rownames(datm$x))
rownames(datm$x)[fm1$y$rownam %in% rownames(datm$x)][1]
rownames(datm$x)[1]
fm1$y$rownam[1:50]
sort(rownames(datm$x))[1:50]
rownames(datm$x)[1:50]
rownames(datm$x)[nrow(dat)]
rownames(datm$x)[nrow(datm)]
str(segm)
iok=sort(segm[[1]]$segm1)
rownames(datm$x)[iok]
rownames(datm$x)[iok][1:50]
fm1$y$rownam[1:50]
rep
idrep=segm[[rep]]
str(idrep)
rep=1:2
idrep=segm[[rep]]
str(idrep)
str(rep)
rep
idrep=segm[[rep]]
str(idrep)
idrep=segm[[1]]
str(idrep)
idrep=segm[[2]]
str(idrep)
idrep=segm[[1:2]]
str(idrep)
idrep=segm[[c(1,2)]]
str(idrep)
idrep=segm[c(1,2)]
str(idrep)
str(unlist(idrep))
setdiff(rownames(datm$x)[unlist(segm)],fm$y$rownam)
rownames(datm$x)[unlist(segm)]
rownames(datm$x)[unlist(segm)][1:50]
fm1$y$rownam[1:50]
str(fm)
library(nirsextra)
fm=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=12)
segm <- segmkf(n = nrow(datm), K = 5, typ = "random", nrep = 6)      # = Repeated K-fold CV
fm=cvfit(datm$x,datm$culture,fun=plsdalm,segm=seg, ncomp=12)
fm=cvfit(datm$x,datm$culture,fun=plsdalm,segm=segm, ncomp=12)
table_fac_rnirs(fm,datm,4:5,segm,10)
str(fm)
obs=fm$y$y1
pred=fm$fit$y1
obs=as.factor(obs)
pred=as.factor(pred)
str(obs)
table(=obs,pred)
table(obs,pred)
library(nirsextra)
library(nirsextra)
l=Sys.glob(file.path(d,"*.sp"))
d="/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/PerkinElmer/frederic-2017/epo-2016-pc-bpmp-2017"
l=Sys.glob(file.path(d,"*.sp"))
l
sp=readSP.pe(l[763])
library(nirsextra)
sp=readSP.pe(l[763])
sp=readSP.pe(l[764])
sp=readSP.pe(l[765])
sp=readSP.pe(l[764])
d="/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/PerkinElmer/frederic-2017/epo-2016-pc-bpmp-2017"
