devtools::load_all(".")
tools::showNonASCIIfile("DESCRIPTION")
?tools::showNonASCIIfile
out <- c(
"fa\xE7ile test of showNonASCII():",
"\\details{",
"   This is a good line",
"   This has an \xfcmlaut in it.",
"   OK again.",
"}")
f <- tempfile()
cat(out, file = f, sep = "\n")
showNonASCIIfile(f)
showNonASCII(f)
tools::showNonASCIIfile(f)
tools::showNonASCIIfile("DESCRIPTION")
use_mit_license()
?detrend
library(rnirs)
?detrend
data(datcass)
X <- datcass$Xu
headm(X)
### Polynom
degree <- 1
#degree <- 2
z <- detrend(X, method = "poly", degree = degree)
sessionInfo()
install_github("mlesnoff/rnirs", dependencies = TRUE)
library(devtools)
install_github("mlesnoff/rnirs", dependencies = TRUE)
library(rnirs)
data(datcass)
X <- datcass$Xu
headm(X)
### Polynom
degree <- 1
#degree <- 2
z <- detrend(X, method = "poly", degree = degree)
z <- detrend(X, method = "poly", degree = degree)
headm(z)
par(mfrow = c(1, 2))
plotsp(z, zeroes = TRUE, main = "Corrected signal")
sessionInfo()
q()
devtools::use_package("rnirs")
library(devtools)
devtools::use_package("rnirs")
?`usethis-package`
?`use_package`
use_package("ggplot2")
use_package("rnirs")
use_package("dplyr")
use_package("FactoMineR")
install.packages("FactoMineR")
use_package("FactoMineR")
use_package("R.utils")
?var
use_package("stats")
?setDf
?setDF
library(devtools)
install_github("martinEcarnot/nirsextra")
library(nirsextra)
lsf.str(nirsextra)
lsf.str("package::nirsextra")
library(nirsextra)
library(nirsextr)
.libPaths()
library(nirsextra)
lsf.str("package::nirsextra")
lsf.str("nirsextra")
lsf.str(nirsextra)
library(nirsextra)
pre
adj_asd
library(nirsextra)
devtools::load_all(".")
pre
?pre
pre
devtools::load_all(".")
getwd()
?load_all
remove.packages("nirsextra", lib="~/R/x86_64-pc-linux-gnu-library/4.0")
library(nirsextra)
devtools::load_all(".")
pre
library(nirsextra)
pre
library(nirsextra)
pre
library(nirsextra)
pre
library(nirsextra)
pre
library(nirsextra)
pre
devtools::load_all(".")
pre
library(nirsextra)
pre
.libPaths()
library(nirsextra)
pre
library(nirsextra)
pre
devtools::load_all(".")
pre
a=c(3,2,1)
r=sort(a)
r
r=order(a)
r
a=c(3,1,2)
r=order(a)
r
?order
a[r]
a=randu(50)
a=sample(50)
a
r=order(a)
a[r]
a[order(a)]
a
order(a)
pre
library(nirsextra)
pre
library(nirsextra)
pre
?exportPattern
library(nirsextra)
asdÃ¨_read
asd_read
library(nirsextra)
pre
adj_asd
library(nirsextra)
pre
library(nirsextra)
pre
rm(list = ls())
library(nirsextra)
pre
