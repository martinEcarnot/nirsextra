Xr=sp$xp#[-itest,]
Yr=sp$prot#[-itest]
seg <- segmkf(n =nrow(Xr), K = 5, typ = "random", nrep = nrep)
fm=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
mse(fm, ~ ncomp)
fm5=lapply(fm[1:3],function (x) {x[x$ncomp==5,]})
# plot(fm5$fit$y1,fm5$y$y1)
mse(fm, ~ ncomp)
# On regarde la résiduelle moyenne (en CV) d'un grain dans toutes les rep, toutes les VL
# on s'assure qu'elle est très corrélée à la résiduelle moyenne à 5 VL
r=fm$r
rttvl=aggregate(r$y1,by=list(r$rownam),"mean")
r5=aggregate(fm5$r$y1,by=list(fm5$r$rownam),"mean")
g=unique(sp$geno)
ngr_lot=12
# rt=data.frame(r=numeric(length(g)*ngr_lot))
rt=data.frame(name=character(),err2=numeric())
for (i in 1:length(g)) {
idr=which(grepl(g[i], r$rownam))
r1=r[idr,]
r1g=aggregate(r1$y1^2,by=list(r1$rownam),"mean")
colnames(r1g)=c("name","err2")
rt=rbind(rt,r1g[order(r1g$err2),][1:ngr_lot,])
}
iliste=which(rownames(sp) %in% rt$name)
liste=sp$grain[iliste]
# write.csv(liste,file.path("/home/ecarnot/Documents/INRA/NIRS_labo/","liste_Prot_grains_indiv_ASD_sept2022.csv"))
spr=sp[iliste,]
nrep=30
ncomp=12
Xr=spr$xp
Yr=spr$prot
seg <- segmkf(n =nrow(Xr), K = 5, typ = "random", nrep = nrep)
fmr=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
fmr=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
mse(fmr, ~ ncomp)
mse(fmr, ~ ncomp)
plot(fm5$fit$y1,fm5$y$y1)
library(rnirs)
library(nirsextra)
# library(dplyr)
p=globmodel$p
library(rnirs)
library(nirsextra)
# library(dplyr)
scoop_sla_load=function(d) {
ref=read.table("~/Documents/INRA/Projets/scoop/scoop_calibration_pesee_11042022.csv", skip=0, header=T, sep=";", dec=",", na.strings = "ABS")
ref$feuille=as.numeric(sub('.*_', '', ref$bac))
ref=ref[which(ref$pesée.disque.distal<0.005),-c(9:12)]
# Nouvelles pesées, balance 10-6
ref2=read.table("~/Documents/INRA/Projets/scoop/scoop_calibration_pesee_11042022_CNRS.csv", header=T, sep=";", dec=",", na.strings = "NA")
ref2$SLA_prox=0.0000282735/(ref2$pesée.avec.balance.10.6...poinçon.proximal/1e6)
ref2$SLA_dist=0.0000282735/(ref2$pesée.avec.balance.10.6..poinçon.distal/1e6)
ref2$feuille=as.numeric(sub('.*_', '', ref2$bac...n..plante))
refok=merge(ref,ref2,by="feuille")
colnames(refok)[14:15]=c("SLA_prox_10_6","SLA_dist_10_6")
sp=sp2df(asd_read_dir(d))
feuille=ceiling(as.numeric(substr(rownames(sp),nchar(rownames(sp))-4,nchar(rownames(sp))))/2)
sp$feuille=feuille
sp$p_d=as.numeric(substr(rownames(sp),nchar(rownames(sp)),nchar(rownames(sp)))) %% 2
iout=which(sp$x[,1]>1)
if (length(iout)>0) {sp=sp[-iout,]}
spm=merge(sp,refok,by="feuille")
# spm=merge(sp,ref2,by="feuille")
return(spm)
}
scoop_sla_pls= function(spm,inout) {
type_ref_all=c("prox","dist","pdmoy_pastille","feuille","pdmoy_feuille")
for (i in 1:length(type_ref_all)) {
type_ref=type_ref_all[i]
if(type_ref == "prox"){
dat=spm[spm$p_d==1,]  # 1 = prox ; 0 = dist
yref="SLA_prox_10_6"
} else if (type_ref == "dist") {
dat=spm[spm$p_d==0,]  # 1 = prox ; 0 = dist
iout=c(which(dat$SLA_dist<15.6),188)
# dat=dat[-iout,]
yref="SLA_dist_10_6"
} else if (type_ref == "pdmoy_pastille") {
dat=aggregate(spm,by=list(spm$feuille), mean)
dat$x=as.matrix(aggregate(spm$x, list(spm$feuille), mean)[,-1])
dat$SLA_pd_10_6=rowMeans(cbind(dat$SLA_prox_10_6,dat$SLA_dist_10_6),na.rm = T)
iout=c(which(dat$SLA_dist<15.6),188)
# dat=dat[-iout,]
yref="SLA_pd_10_6"
}  else if (type_ref == "feuille") {
dat=spm
# iout=which(is.na(dat$SLA_feuille) | dat$feuille_pliee=="x")
iout=which(is.na(dat$SLA_feuille)  | dat$SLA_feuille>35 | dat$feuille==188)
# dat=dat[-iout,]
yref="SLA_feuille"
} else if (type_ref == "pdmoy_feuille") {
dat=aggregate(spm,by=list(spm$feuille), mean)
dat$x=as.matrix(aggregate(spm$x, list(spm$feuille), mean)[,-1])
iout=c(which(dat$SLA_dist<15.6),188)
# dat=dat[-iout,]
yref="SLA_feuille"
return(list(dat=dat,p=p, ncomp=ncomp))
}
w=87
ncomp=20
# p=rbind(list('adj',''),list('red',c(1000,1,1)),list('snv',''),list('sder',c(2,3,w)),list('red',c(w/2,w/2,1)))
# p=rbind(list('adj',''),list('red',c(50,20,1)),list('snv',''),list('sder',c(1,4,w)))
p=rbind(list('adj',''),list('red',c(50,20,1)),list('detr',''))
dat$xp=pre(dat$x,p)
n=nrow(dat)
# itest=sample(n,n/5)
# Xu=dat$xp[itest,]
# Xr=dat$xp[-itest,]
# Yr=dat[-itest,yref]
# Yu=dat[itest,yref]
Xr=dat$xp
Yr=dat[,yref]
iout=which(is.na(Yr) | Yr<15 | Yr>35)
if (length(iout)>0) {
Xr=Xr[-iout,]
Yr=Yr[-iout]
}
seg <- segmkf(n =nrow(Xr), K = 5, typ = "random", nrep = 30)
# seg <- segmkf(n =nrow(Xr), K = 5, typ = "consecutive", nrep = 20)
fm=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
# print(mse(fm, ~ ncomp))
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==8,]})
plot(fm1$fit$y1,fm1$y$y1, xlab="SLA_CValidation", ylab="SLA_Reference")
text(min(fm1$fit$y1)+1,max(fm1$y$y1),paste0("R2max = ",max(mse(fm, ~ ncomp)$r2)))
text(min(fm1$fit$y1+1),max(fm1$y$y1)-1,paste0("R2_8 = ",mse(fm, ~ ncomp)$r2[8]))
title(paste0(inout," / SLA_ref: ",type_ref))
}
}
spm=scoop_sla_load("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/20220404_scoop_calib_detachee/")
globmodel=scoop_sla_pls(spm,"spectres au labo")
p=globmodel$p
Xr=pre(globmodel$dat$x,p)
Yr=globmodel$dat$SLA_feuille
ncomp=globmodel$ncomp
iout=which(is.na(Yr) | Yr<15 | Yr>35)
if (length(iout)>0) {
Xr=Xr[-iout,]
Yr=Yr[-iout]
}
Xu=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/scoop-feuille-5042023/")
Xu=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/scoop-feuille-5042023/")
Xup=pre(Xu,p)
fm <- pca(Xr, Xup, ncomp = 5)
Tr <- fm$Tr
Tu <- fm$Tu
T <- rbind(Tr, Tu)
row.names(T) <- 1:nrow(T)  #  c(rep("R", nrow(Tr)), bacs) #
# group <- c(rep("Reference", nrow(Tr)), rep("Unknown_26", nrow(sp26)), rep("Unknown_27", nrow(sp27)))
group <- c(rep("Reference", nrow(Tr)), rep("New", nrow(Tu)))
plotxy(T, group = group, pch = 16, cex= 0.4, zeroes = TRUE)
plotxy(T, group = group, pch = 16, cex= 0.4, zeroes = TRUE)
seg <- segmkf(n =nrow(Xr), K = 5, typ = "random", nrep = 30)
fm=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
print(mse(fm, ~ ncomp))
fm <- plsr(Xr, Yr, Xup, ncomp = ncomp)
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==11,]})
plot(fm1$fit$y1)
plot(fm1$fit$y1)
str(fm1)
str(fm1$fit)
write.csv(fm1$fit,file.path("~/Documents/INRA/Projets/scoop/2023/","scoop2023_SLA_pred_1.csv"))
write.csv(fm1$fit,file.path("~/Documents/INRA/Projets/scoop/scan_scoop_2023/","scoop2023_SLA_pred_1.csv"))
idrefx=seq(1,nrow(Xu),120)  # Du 1er Xu on prend tous les 120 car le spectre avec ref
idpredx=seq(61,nrow(Xu),120)
# idrefy=SLA$bac == bacs[idref]
# idpredy=seq(2,nrow(m),2)
Xrs=rbind(Xr,Xup[idrefx,])
Yrs=c(Yr,SLA$SLA_ref[match(bacs[idrefx], SLA$bac)])
hist(fm1$fit$y1)
bac2023=cbind(rownames(Xu),substr(rownames(Xu),1,nchar(rownames(Xu))-5),fm1$fit$y1)
m=aggregate(bac2023,by=list(bac2023[,2]),FUN = function(x) x[1:2])  # fonctionne car les spectres sont ordonnés, les 2 premiers spectres correspondent à la feuillles scannée en reference
ref=read.table("/home/ecarnot/Documents/INRA/Projets/scoop/scan_scoop_2023/scoop_surfFeuille.csv", skip = 1, header = TRUE, sep = ";", dec=",")
colnames(ref)[6]="SLA_ref"
pred=unlist(cbind(m$Group.1,m$V3[,1],m$V3[,2]))
colnames(pred)=c("bac","SLA_pred_prox","SLA_pred_dist")
SLA=merge(ref,pred,by = "bac")[,c(1,6,11,12)]
SLA[,2:4]=as.numeric(as.matrix(SLA[,2:4]))
SLA$SLA_pred_moy=rowMeans(SLA[,3:4])
sqrt(mean((SLA$SLA_ref-SLA$SLA_pred_moy)^2))
cor(SLA$SLA_ref-SLA$SLA_pred_prox)
sqrt(mean((SLA$SLA_ref-SLA$SLA_pred_moy)^2))
str(SLA)
unique(SLA$SLA_ref)
sort(unique(SLA$SLA_ref))
cor(SLA$SLA_ref-SLA$SLA_pred_moy)
cor(SLA$SLA_ref,SLA$SLA_pred_moy)
plot(SLA$SLA_ref-SLA$SLA_pred_moy)
plot(SLA$SLA_ref,SLA$SLA_pred_moy)
idrefx=seq(1,nrow(Xu),120)  # Du 1er Xu (scoop-feuille-5042023) on prend tous les 120 car le spectre avec ref
idpredx=seq(61,nrow(Xu),120)
idrefx
idpredx
Xrs=rbind(Xr,Xup[idrefx,])
Yrs=c(Yr,SLA$SLA_ref[match(bacs[idrefx], SLA$bac)])
Xrs=rbind(Xr,Xup[idrefx,])
Yrs=c(Yr,SLA$SLA_ref[match(bacs[idrefx], SLA$bac)])
bac2023
str(bac2023)
dim(bac2023)
str(SLA)
Yr
bacs2023[idpredx]
bac2023[idpredx]
bac2023
bac2023[1:10,2]
bac2023[1:10,1]
bac2023[1:10,3]
bacs[idpredx,2]
bac2023[idpredx,2]
SLA$bac
match(bac2023[idpredx,2], SLA$bac)
SLA
Xus=Xup[idpredx,]
Yus=SLA$SLA_ref[match(bac2023[idpredx,2], SLA$bac)]
seg <- segmkf(n =nrow(Xrs), K = 5, typ = "random", nrep = 30)
fm=cvfit(Xrs,Yrs,fun=plsr,segm=seg, ncomp=ncomp)
Xrs=rbind(Xr,Xup[idrefx,])
Yrs=c(Yr,SLA$SLA_ref[match(bac2023[idrefx,2], SLA$bac)])
Xus=Xup[idpredx,]
Yus=SLA$SLA_ref[match(bac2023[idpredx,2], SLA$bac)]
seg <- segmkf(n =nrow(Xrs), K = 5, typ = "random", nrep = 30)
fm=cvfit(Xrs,Yrs,fun=plsr,segm=seg, ncomp=ncomp)
fm=cvfit(Xrs,Yrs,fun=plsr,segm=seg, ncomp=ncomp)
mse(fm, ~ ncomp)
mse(fm, ~ ncomp)
str(Yrs)
str(Xus)
fm <- plsr(Xrs, Yrs, Xus, Yus, ncomp = ncomp)
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==11,]})
plot(fm1$fit$y1, Yus)
plot(fm1$fit$y1, Yus)
idrefx
idrefx+idpredx
c(idrefx,idpredx)
# On prédit avec un modèle utlisant les données de ref de 2022+2023
Xr2223=rbind(Xr,Xup[c(idrefx,idpredx),])
Yr2223=c(Yr,SLA$SLA_ref[match(bac2023[c(idrefx,idpredx),2], SLA$bac)])
fmp <- plsr(Xr2223, Yr2223, Xup, Yup, ncomp = ncomp)
# On prédit avec un modèle utlisant les données de ref de 2022+2023
Xr2223=rbind(Xr,Xup[c(idrefx,idpredx),])
Yr2223=c(Yr,SLA$SLA_ref[match(bac2023[c(idrefx,idpredx),2], SLA$bac)])
seg <- segmkf(n =nrow(Xr2223), K = 5, typ = "random", nrep = 30)
fm=cvfit(Xr2223,Yr2223,fun=plsr,segm=seg, ncomp=ncomp)
mse(fm, ~ ncomp)
mse(fm, ~ ncomp)
Yr2223
iout=is.na(Yr2223)
Xr2223=rbind(Xr,Xup[c(idrefx,idpredx),])
Yr2223=c(Yr,SLA$SLA_ref[match(bac2023[c(idrefx,idpredx),2], SLA$bac)])
iout=is.na(Yr2223)
Xr2223=Xr2223[-iout,]
Yr2223Yr2223[-iout]
# On prédit avec un modèle utlisant les données de ref de 2022+2023
Xr2223=rbind(Xr,Xup[c(idrefx,idpredx),])
Yr2223=c(Yr,SLA$SLA_ref[match(bac2023[c(idrefx,idpredx),2], SLA$bac)])
iout=is.na(Yr2223)
Xr2223=Xr2223[-iout,]
Yr2223=Yr2223[-iout]
seg <- segmkf(n =nrow(Xr2223), K = 5, typ = "random", nrep = 30)
fm=cvfit(Xr2223,Yr2223,fun=plsr,segm=seg, ncomp=ncomp)
fm=cvfit(Xr2223,Yr2223,fun=plsr,segm=seg, ncomp=ncomp)
mse(fm, ~ ncomp)
print(mse(fm, ~ ncomp))
print(mse(fm, ~ ncomp))
Yr2223
iout
Yr2223[-iout]
Yr2223[iout]
Yr2223[!iout]
Yr2223[~iout]
iout=which(is.na(Yr2223))
# On prédit avec un modèle utlisant les données de ref de 2022+2023
Xr2223=rbind(Xr,Xup[c(idrefx,idpredx),])
Yr2223=c(Yr,SLA$SLA_ref[match(bac2023[c(idrefx,idpredx),2], SLA$bac)])
iout=which(is.na(Yr2223))
Xr2223=Xr2223[-iout,]
Yr2223=Yr2223[-iout]
seg <- segmkf(n =nrow(Xr2223), K = 5, typ = "random", nrep = 30)
fm=cvfit(Xr2223,Yr2223,fun=plsr,segm=seg, ncomp=ncomp)
mse(fm, ~ ncomp)
mse(fm, ~ ncomp)
fm2223 <- plsr(Xr2223, Yr2223, Xup, ncomp = ncomp)
fm2223_1=lapply(fm[1:3],function (x) {x[x$ncomp==11,]})
plot(fm2223_1$fit$y1)
write.csv(fm2223_1$fit,file.path("~/Documents/INRA/Projets/scoop/scan_scoop_2023/","scoop2023_SLA_pred_C2223.csv"))
str(Xu)
str(Xup)
str(fm2223_1)
str(Xup)
fm2223_1=lapply(fm2223[1:3],function (x) {x[x$ncomp==11,]})
write.csv(fm2223_1$fit,file.path("~/Documents/INRA/Projets/scoop/scan_scoop_2023/","scoop2023_SLA_pred_C2223.csv"))
Xu=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/scoop-feuille-5032023/")
# idref=seq(1,2700,60)
# Xured=Xu[idref,]
# Xup=pre(Xured,p)
Xup=pre(Xu,p)
fm2223 <- plsr(Xr2223, Yr2223, Xup, ncomp = ncomp)
fm2223_1=lapply(fm2223[1:3],function (x) {x[x$ncomp==11,]})
write.csv(fm2223_1$fit,file.path("~/Documents/INRA/Projets/scoop/scan_scoop_2023/","scoop2023_SLA_pred_C2223_2.csv"))
hist(fm2223_1$fit$y1)
d="/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/scoop_feuilles_26052022"
sp26=asd_read_dir(d)
d="/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/scoop_feuilles_27052022"
sp27=asd_read_dir(d)
Xu=rbind(sp26,sp27)
Xu=Xu[-2941,]
# Xu=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/scoop-feuille-5032023/")
# idref=seq(1,2700,60)
# Xured=Xu[idref,]
# Xup=pre(Xured,p)
Xup=pre(Xu,p)
fm2223 <- plsr(Xr2223, Yr2223, Xup, ncomp = ncomp)
fm2223_1=lapply(fm2223[1:3],function (x) {x[x$ncomp==11,]})
write.csv(fm2223_1$fit,file.path("~/Documents/INRA/Projets/scoop/scan_scoop_2023/","scoop2022_SLA_pred_C2223.csv"))
hist(fm2223_1$fit$y1)
str(Xup)
library(rnirs)
library(ggplot2)
library(dplyr)
library(nirsextra)
d='/home/ecarnot/Documents/INRA/ASD/etudiant_jacques_23092022/'
sp=asd_read_dir(d)
pos=rep(1:30,9)
sp=sp2df(sp)
sp$geno=substr(rownames(sp),1,nchar(rownames(sp))-5)
sp$grain=paste(sp$geno,pos,sep="-")
sp$prot=c(rep(11.6,30),rep(12,30),rep(13,30),rep(14,30),rep(15,30),rep(16,30),rep(17,30),rep(18,30),rep(19,30))
w=51
p=rbind(list('adj',c(651,1451)),list('red',c(10,1,1)),list('snv',''),list('sder',c(1,3,w)),list('red',c(w/2,w/2,1)))
# p=rbind(list('adj',''),list('red',c(1000,40,1)),list('snv',''),list('sder',c(1,3,w)),list('red',c(w/2,w/2,1)))
sp$xp=pre(sp$x,p)
plotsp(sp$xp)
n=nrow(sp)
nrep=30
ncomp=12
itest=sample(n,n/5)
Xu=sp$xp[itest,]
Yu=sp$prot[itest]
Xr=sp$xp#[-itest,]
Yr=sp$prot#[-itest]
seg <- segmkf(n =nrow(Xr), K = 5, typ = "random", nrep = nrep)
fm=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
mse(fm, ~ ncomp)
fm5=lapply(fm[1:3],function (x) {x[x$ncomp==5,]})
# plot(fm5$fit$y1,fm5$y$y1)
# On regarde la résiduelle moyenne (en CV) d'un grain dans toutes les rep, toutes les VL
# on s'assure qu'elle est très corrélée à la résiduelle moyenne à 5 VL
r=fm$r
rttvl=aggregate(r$y1,by=list(r$rownam),"mean")
r5=aggregate(fm5$r$y1,by=list(fm5$r$rownam),"mean")
g=unique(sp$geno)
ngr_lot=12
# rt=data.frame(r=numeric(length(g)*ngr_lot))
rt=data.frame(name=character(),err2=numeric())
for (i in 1:length(g)) {
idr=which(grepl(g[i], r$rownam))
r1=r[idr,]
r1g=aggregate(r1$y1^2,by=list(r1$rownam),"mean")
colnames(r1g)=c("name","err2")
rt=rbind(rt,r1g[order(r1g$err2),][1:ngr_lot,])
}
iliste=which(rownames(sp) %in% rt$name)
liste=sp$grain[iliste]
# write.csv(liste,file.path("/home/ecarnot/Documents/INRA/NIRS_labo/","liste_Prot_grains_indiv_ASD_sept2022.csv"))
xnew=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/R22_epo_BIS_12.07.2022")
xnew=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/R22_epo_BIS_12.07.2022")
spr=sp[iliste,]
nrep=30
ncomp=12
Xr=spr$xp
Yr=spr$prot
seg <- segmkf(n =nrow(Xr), K = 5, typ = "random", nrep = nrep)
fmr=cvfit(Xr,Yr,fun=plsr,segm=seg, ncomp=ncomp)
mse(fmr, ~ ncomp)
fmr5=lapply(fmr[1:3],function (x) {x[x$ncomp==7,]})
# plot(fmr5$fit$y1,fmr5$y$y1)
fm <- plsr(Xr, Yr, pre(xnew,p), ncomp = ncomp)
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==6,]})
prot_EPO22bis=data.frame(prot_calib_grain=fm1$fit$y1,nom=fm1$fit$rownam)
prot_EPO22bis_table=read.table("/home/ecarnot/Documents/INRA/SelPhen_2023/Stage_CBienvenu_2023/SelPhen2023_EPO22_Bis_Prot_pred_ASD_lots.txt", header = T, sep=";")
colnames(prot_EPO22bis_table)[c(2,4)]=c("nom","prot_calib_table")
prot_EPO22bis=merge(prot_EPO22bis,prot_EPO22bis_table,by="nom")[,-c(3,4)]
f="/home/ecarnot/Documents/INRA/Projets/MobiDiv/2022/THR_PAR/Données Totale capteur Lora avec exposition station Meteo du 07 au 12 septembre 2022.csv"
x=read.table(f,header = TRUE, dec=".")
str(x)
x=read.table(f,header = TRUE, dec=".", sep=";")
str(x)
plot(x$TempC_SHT)
plot(x$TempC_SHT, type = l)
plot(x$TempC_SHT, pch=".")
i1=which(x$TempC_SHT>30)[1]
i1
xr=x[1:10000,]
plot(xr$TempC_SHT, pch=".")
plot(prot_EPO22bis, pch=".")
str(plot(prot_EPO22bis)
)
str(prot_EPO22bis)
mse(fmr, ~ ncomp)
mse(fmr, ~ ncomp)
plot(prot_EPO22bis, pch=".")
plot(prot_EPO22bis)
# xnew=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/R22_epo_BIS_12.07.2022")
xnew=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/epo-22-graines/")
fm <- plsr(Xr, Yr, pre(xnew,p), ncomp = ncomp)
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==10,]})
fm1$fit$y1
fm1$fit$rownam
plot(prot_EPO22bis$prot_calib_table)
plot(fm1$fit$y1)
prot_EPO22bis=data.frame(prot_calib_grain=fm1$fit$y1,nom=fm1$fit$rownam)
write.csv("/home/ecarnot/Documents/INRA/SelPhen_2023/Stage_CBienvenu_2023/Pred_prot_grain_ASD_nov2022.csv",prot_EPO22bis)
prot_EPO22bis
prot_EPO22bis=data.frame(nom=fm1$fit$rownam, prot_calib_grain=fm1$fit$y1)
write.csv("/home/ecarnot/Documents/INRA/SelPhen_2023/Stage_CBienvenu_2023/Pred_prot_grain_ASD_nov2022.csv",prot_EPO22bis)
write.csv(prot_EPO22bis,"/home/ecarnot/Documents/INRA/SelPhen_2023/Stage_CBienvenu_2023/Pred_prot_grain_ASD_nov2022.csv")
xnew=asd_read_dir("/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/ASD/R22_epo_BIS_12.07.2022")
fm <- plsr(Xr, Yr, pre(xnew,p), ncomp = ncomp)
fm1=lapply(fm[1:3],function (x) {x[x$ncomp==10,]})
prot_EPO22bis=data.frame(nom=fm1$fit$rownam, prot_calib_grain=fm1$fit$y1)
plot(prot_EPO22bis)
plot(prot_EPO22bis$prot_calib_grain)
write.csv(prot_EPO22bis,"/home/ecarnot/Documents/INRA/SelPhen_2023/Stage_CBienvenu_2023/Pred_prot_grain_ASD_nov2022_bis.csv")
f="/run/user/1000/gvfs/smb-share:server=stocka2,share=agap-ble/Ble/PerkinElmer/Manip_Jacques_AB_avant_semis_2022/EPO_Gros_R1_2.sp"
library(nirsextra)
sp=readSP.pe(f)
str(sp)
9620+39+39
9620+390+390
9620+400
10170-10020
10170-9620
55/2
16*44
f="/home/ecarnot/Documents/INRA/ASD/disques feuilles 2023 Selgenvit/Spectrum00001.asd"
sp=asd_read(f)
library(nirsextra)
sp=asd_read(f)
type
times=T
t1=paste(sp$info$spectrumheaderwhensec,sp$info$spectrumheaderwhenmin,sp$info$spectrumheaderwhenhour,sp$info$spectrumheaderwhenmday,sp$info$spectrumheaderwhenmon,sp$info$spectrumheaderwhenyear)
tim=rbind(tim,as.POSIXct(t1, format = "%S %M %H %d %m %y",origin = "1960-01-01"))
tim=""
tim=rbind(tim,as.POSIXct(t1, format = "%S %M %H %d %m %y",origin = "1960-01-01"))
tim
as.Date(as.numeric(tim))
as.POSIXct(as.numeric(tim))
f="/home/ecarnot/Documents/INRA/ASD/disques feuilles 2023 Selgenvit/Spectrum00001.asd"
sp=asd_read(f)
library(nirsextra)
sp=asd_read(f)
sp$info$spectrumheaderwhenyear
sp$info$spectrumheaderwhenmon
sp$info$spectrumheaderwhenwday
sp$info$spectrumheaderwhenmday
sp$info$spectrumheaderwhenmin
sp$info$spectrumheaderwhenmon
library(nirsextra)
library(nirsextra)
library(nirsextra)
asd_read_dir
devtools::document()
devtools::install()
devtools::install()
install.packages("gitcreds")
gitcreds::gitcreds_set()
gitcreds::gitcreds_get()
gitcreds::gitcreds_set()
source("~/Documents/INRA/R/nirsextra/R/gridscore_mec.R")
load("~/Documents/INRA/R/xy_ag")
source("~/Documents/INRA/R/nirsextra/R/gridscore_mec.R")
library(rchemo)
library(rchemo)
source("~/Documents/INRA/R/nirsextra/R/gridscore_mec.R")
ncomp=20
segm <- list(rep1 = as.list(1:nrow(x)))
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
library(nirsextra)
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
.mat <- function(X, prefix = NULL) {
if(is.vector(X))
X <- matrix(X, ncol = 1)
if(!is.matrix(X))
X <- as.matrix(X)
if(is.null(row.names(X)))
row.names(X) <- seq_len(dim(X)[1])
if(is.null(prefix)) {
if(is.null(colnames(X)))
colnames(X) <- paste("x", seq_len(dim(X)[2]), sep = "")
}
else
colnames(X) <- paste(prefix, seq_len(dim(X)[2]), sep = "")
X
}
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
library(data.table)
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
str(fmc)
source("~/Documents/INRA/R/nirsextra/R/gridscore_mec.R")
source("~/Documents/INRA/R/nirsextra/R/gridscore_mec.R")
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
detach("package:nirsextra", unload = TRUE)
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
source("~/Documents/INRA/R/nirsextra/R/gridcv_mec.R")
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
source("~/Documents/INRA/R/nirsextra/R/gridscore_mec.R")
fmc = gcvlv(x,y,segm,score = cor2, fun = plskern, nlv = 1:ncomp, verb = F)
score(pred[[i]]
)
pred[[i]]
